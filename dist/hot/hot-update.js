webpackHotUpdate("main",{

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./style.css */ \"./src/style.css\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bow = function Bow() {\n  _classCallCheck(this, Bow);\n\n  this.top = window.innerHeight - 150;\n  this.left = window.innerWidth / 2 - 60;\n};\n\nvar Arrow = function Arrow(top) {\n  _classCallCheck(this, Arrow);\n\n  this.top = top;\n  this.canArrowBasicDisappear = false;\n};\n\nvar Game = function Game(scoreText) {\n  _classCallCheck(this, Game);\n\n  this.scoreText = scoreText;\n  this.noOfArrows = 1;\n  this.stopGame = false;\n};\n\nvar ShootingTarget = function ShootingTarget(left) {\n  _classCallCheck(this, ShootingTarget);\n\n  this.direction = 1;\n  this.left = left;\n};\n\nvar Button = function Button() {\n  _classCallCheck(this, Button);\n\n  this.top = window.innerHeight / 2 - 25;\n  this.left = window.innerWidth / 2 - 100;\n};\n\nvar aroowTopPos = 0;\nvar arrowInBoardLeftPos = 0;\nvar gameObj = new Game(0);\nvar shootingTargetObj = new ShootingTarget(window.innerWidth / 2 - 60); // console.log(window.innerWidth/2-60);\n\nvar bowObj = new Bow();\nvar arrowObj = new Arrow(aroowTopPos);\nvar arrowInBoardObj = new Arrow();\narrowInBoardObj.left = 0;\nvar buttonObj = new Button();\n\nfunction component() {\n  //main div\n  var gameContainerDOM = document.createElement('div');\n  gameContainerDOM.classList.add('container'); // main button\n\n  var buttonDOM = document.createElement('button');\n  buttonDOM.classList.add('main_button');\n  buttonDOM.innerHTML = 'PLAY A NEW GAME';\n  buttonDOM.setAttribute(\"style\", \"top:\".concat(buttonObj.top, \"px;left:\").concat(buttonObj.left, \"px\"));\n  buttonDOM.addEventListener('click', startPlaying);\n  gameContainerDOM.appendChild(buttonDOM); //score table\n\n  var scoreTextDOM = document.createElement('div');\n  scoreTextDOM.classList.add('scoreText');\n  scoreTextDOM.innerHTML = 'Score: ' + gameObj.scoreText + ' Arrows: ' + gameObj.noOfArrows;\n  gameContainerDOM.appendChild(scoreTextDOM); //shooting target\n\n  var shootingTargetDOM = document.createElement('div');\n  shootingTargetDOM.classList.add('shooting-target');\n  shootingTargetDOM.setAttribute(\"style\", \"top:0px;left:\".concat(window.innerWidth / 2 - 60, \"px\"));\n  gameContainerDOM.appendChild(shootingTargetDOM); //bow\n\n  var bowDOM = document.createElement('div');\n  bowDOM.classList.add('bow');\n  bowDOM.setAttribute(\"style\", \"top:\".concat(bowObj.top, \"px;left:\").concat(bowObj.left, \"px\"));\n  gameContainerDOM.appendChild(bowDOM); //arrow\n\n  var arrowDOM = document.createElement('div');\n  arrowDOM.classList.add('arrow', 'arrow-basic');\n  arrowDOM.setAttribute(\"style\", \"top:\".concat(arrowObj.top, \"px;left:49px\"));\n  bowDOM.appendChild(arrowDOM); //arrow in board\n\n  var arrowInBoardDOM = document.createElement('div');\n  arrowInBoardDOM.classList.add('arrow', 'arrow-in-board');\n  arrowInBoardDOM.setAttribute(\"style\", \"opacity:0;top:55px;left:\".concat(arrowInBoardObj.left, \"px\"));\n  shootingTargetDOM.appendChild(arrowInBoardDOM);\n  return gameContainerDOM;\n}\n\nfunction shoot() {\n  var currentArrowPosition = 0;\n  var id = setInterval(movingArrow, 10);\n\n  function movingArrow() {\n    currentArrowPosition++;\n  }\n}\n\nfunction startPlaying() {\n  //removing button\n  var child = document.getElementsByClassName('main_button');\n  var parent = child[0].parentNode;\n  parent.removeChild(child[0]); //setting score to 0\n\n  gameObj.scoreText = 0; //if the gameOverText exist remove it\n\n  var gameOverText = document.getElementsByClassName('gameOverText');\n\n  if (gameOverText.length > 0) {\n    var gameOverTextParent = gameOverText[0].parentNode;\n    gameOverTextParent.removeChild(gameOverText[0]);\n  }\n\n  ;\n  initiateMovingTarget();\n  addEventListenerToDoc(true);\n}\n\nfunction gameOver() {\n  gameObj.stopGame = true;\n  showGameOverInfo();\n}\n\nfunction showGameOverInfo() {\n  //creating game over info and adding it to the main el\n  var element = document.getElementsByClassName('container');\n  var gameOverText = document.createElement('p'); // gameOverText.setAttribute(\"style\",`top:${window.innerHeight/2-120}px;left:${window.innerWidth/2-100}px`);\n\n  gameOverText.classList.add('gameOverText');\n  gameOverText.innerText = \"Game over. Your score is \".concat(gameObj.scoreText);\n  element[0].appendChild(gameOverText);\n  var buttonDOM = document.createElement('button');\n  buttonDOM.classList.add('main_button');\n  buttonDOM.innerHTML = 'PLAY A NEW GAME';\n  buttonDOM.setAttribute(\"style\", \"top:\".concat(buttonObj.top, \"px;left:\").concat(buttonObj.left, \"px\"));\n  buttonDOM.addEventListener('click', startPlaying);\n  element[0].appendChild(buttonDOM);\n} // console.log();\n\n\nfunction initiateMovingTarget() {\n  var id = setInterval(movingTarget, 10);\n\n  function movingTarget() {\n    gameObj.stopGame == true ? clearInterval(id) : null;\n    var target = document.getElementsByClassName('shooting-target');\n    target[0].setAttribute(\"style\", \"top:0px;left:\".concat(shootingTargetObj.left, \"px\"));\n    var marginForBoardLeft = window.innerWidth < 550 ? 0 : window.innerWidth / 2 - 240;\n    var marginForBoardRight = window.innerWidth < 550 ? window.innerWidth - 120 : window.innerWidth / 2 + 120;\n\n    if (shootingTargetObj.left >= marginForBoardRight || shootingTargetObj.left <= marginForBoardLeft) {\n      shootingTargetObj.direction = shootingTargetObj.direction * -1;\n\n      if (arrowObj.canArrowBasicDisappear) {\n        target[0].childNodes[0].setAttribute(\"style\", \"opacity:0;top:55px;left:\".concat(arrowInBoardObj.left, \"px\"));\n        arrowObj.top = aroowTopPos;\n        var arrowDOM = document.getElementsByClassName('arrow-basic');\n        arrowDOM[0].setAttribute(\"style\", \"opacity:1;top:\".concat(arrowObj.top, \"px;left:49px\"));\n        addEventListenerToDoc(true);\n      }\n    }\n\n    shootingTargetObj.left = shootingTargetObj.left + shootingTargetObj.direction;\n  }\n}\n\nfunction addEventListenerToDoc(val) {\n  if (val) {\n    // arrowObj.canArrowBasicDisappear=true;\n    setTimeout(function () {\n      ['click', 'keypress'].forEach(function (evt) {\n        return document.body.addEventListener(evt, moveArrow);\n      });\n    }, 10);\n  } else {\n    ['click', 'keypress'].forEach(function (evt) {\n      return document.body.removeEventListener(evt, moveArrow);\n    });\n  }\n}\n\nfunction moveArrow(e) {\n  addEventListenerToDoc(false);\n  var opacityArrowBasic = 1;\n  var arrowDOM = document.getElementsByClassName('arrow-basic');\n  arrowObj.canArrowBasicDisappear = false; // if(!arrowObj.canArrowBasicDisappear) return null;\n\n  if (e.type === \"click\" || e.charCode === 32 || e.charCode === 102) {\n    var movingArrowFn = function movingArrowFn() {\n      if (arrowDOM[0].offsetParent.offsetTop + arrowObj.top == 55) {\n        if (window.innerWidth / 2 - 120 < shootingTargetObj.left && shootingTargetObj.left < window.innerWidth / 2) {\n          gameObj.noOfArrows == 0 ? gameOver() : null;\n          opacityArrowBasic = 0;\n          clearInterval(id);\n          arrowObj.canArrowBasicDisappear = true;\n          updateData(arrowDOM);\n        }\n      } else if (arrowDOM[0].offsetParent.offsetTop + arrowObj.top < -70) {\n        gameObj.noOfArrows == 0 ? gameOver() : null;\n        clearInterval(id);\n        arrowObj.canArrowBasicDisappear = true;\n      }\n\n      arrowDOM[0].setAttribute(\"style\", \"opacity:\".concat(opacityArrowBasic, \";top:\").concat(arrowObj.top, \"px;left:49px\"));\n      arrowObj.top = arrowObj.top - 1;\n      var scoreTextDOM = document.getElementsByClassName('scoreText');\n      scoreTextDOM[0].innerHTML = 'Score: ' + gameObj.scoreText + ' Arrows: ' + gameObj.noOfArrows;\n    };\n\n    gameObj.noOfArrows = gameObj.noOfArrows - 1;\n    var id = setInterval(movingArrowFn, 4);\n  } else {\n    return null;\n  }\n}\n\nfunction updateData(arrowDOM) {\n  var arrowLeftPos = arrowDOM[0].offsetParent.offsetLeft + 49;\n  var placeOnShootingTarget = -1 * (shootingTargetObj.left - arrowLeftPos);\n  arrowInBoardObj.left = placeOnShootingTarget;\n  var arr = [97.5, 81.5, 70.5, 57.5, 41.5, 28.5, 17, 1, -10];\n  var minusPointOnBoard = 0;\n  var breakLoop = false;\n  arr.forEach(function (item, i) {\n    if (breakLoop) return;\n\n    if (placeOnShootingTarget >= item) {\n      breakLoop = true;\n      i > 4 ? minusPointOnBoard = i - 4 : null;\n      gameObj.scoreText = gameObj.scoreText + 2 + 2 * i - 4 * minusPointOnBoard;\n      console.log(\"points:\", 2 + 2 * i - 4 * minusPointOnBoard);\n    }\n  });\n  var scoreTextDOM = document.getElementsByClassName('scoreText');\n  scoreTextDOM[0].innerHTML = 'Score: ' + gameObj.scoreText + ' Arrows: ' + gameObj.noOfArrows;\n  var arrowInBoardDOM = document.getElementsByClassName('arrow-in-board');\n  arrowInBoardDOM[0].setAttribute(\"style\", \"opacity:1;top:55px;left:\".concat(arrowInBoardObj.left, \"px\"));\n}\n\ndocument.body.appendChild(component());\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

})