webpackHotUpdate("main",{

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./style.css */ \"./src/style.css\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bow = function Bow() {\n  _classCallCheck(this, Bow);\n\n  this.top = window.innerHeight - 150;\n  this.left = window.innerWidth / 2 - 60;\n};\n\nvar Arrow = function Arrow(top) {\n  _classCallCheck(this, Arrow);\n\n  this.top = top;\n  this.canShoot = false;\n};\n\nvar Game = function Game(scoreText) {\n  _classCallCheck(this, Game);\n\n  this.scoreText = scoreText;\n};\n\nvar ShootingTarget = function ShootingTarget(left) {\n  _classCallCheck(this, ShootingTarget);\n\n  this.direction = 1;\n  this.left = left;\n};\n\nvar Button = function Button() {\n  _classCallCheck(this, Button);\n\n  this.top = window.innerHeight / 2 - 25;\n  this.left = window.innerWidth / 2 - 100;\n};\n\nvar aroowLeftPos = 0;\nvar gameObj = new Game(0);\nvar shootingTargetObj = new ShootingTarget(1);\nvar bowObj = new Bow();\nvar arrowObj = new Arrow(aroowLeftPos);\nvar buttonObj = new Button();\n\nfunction component() {\n  //main div\n  var gameContainerDOM = document.createElement('div');\n  gameContainerDOM.classList.add('container'); // main button\n\n  var buttonDOM = document.createElement('button');\n  buttonDOM.classList.add('main_button');\n  buttonDOM.innerHTML = 'PLAY A NEW GAME';\n  buttonDOM.setAttribute(\"style\", \"top:\".concat(buttonObj.top, \"px;left:\").concat(buttonObj.left, \"px\"));\n  buttonDOM.addEventListener('click', startPlaying);\n  gameContainerDOM.appendChild(buttonDOM); //score table\n\n  var scoreTextDOM = document.createElement('div');\n  scoreTextDOM.classList.add('scoreText');\n  scoreTextDOM.innerHTML = 'Score: ' + 0;\n  gameContainerDOM.appendChild(scoreTextDOM); //shooting target\n\n  var shootingTargetDOM = document.createElement('div');\n  shootingTargetDOM.classList.add('shooting-target');\n  shootingTargetDOM.setAttribute(\"style\", \"top:0px;left:\".concat(window.innerWidth / 2 - 60, \"px\"));\n  gameContainerDOM.appendChild(shootingTargetDOM); //bow\n\n  var bowDOM = document.createElement('div');\n  bowDOM.classList.add('bow');\n  bowDOM.setAttribute(\"style\", \"top:\".concat(bowObj.top, \"px;left:\").concat(bowObj.left, \"px\"));\n  gameContainerDOM.appendChild(bowDOM); //arrow\n\n  var arrowDOM = document.createElement('div');\n  arrowDOM.classList.add('arrow');\n  arrowDOM.setAttribute(\"style\", \"top:\".concat(arrowObj.top, \"px;left:49px\"));\n  bowDOM.appendChild(arrowDOM);\n  return gameContainerDOM;\n}\n\nfunction shoot() {\n  var currentArrowPosition = 0;\n  var id = setInterval(movingArrow, 10);\n\n  function movingArrow() {\n    currentArrowPosition++;\n  }\n}\n\nfunction startPlaying() {\n  //removing button\n  var child = document.getElementsByClassName('main_button');\n  var parent = child[0].parentNode;\n  parent.removeChild(child[0]); //setting score to 0\n\n  gameObj.scoreText = 0; //if the gameOverText exist remove it\n\n  var gameOverText = document.getElementsByClassName('gameOverText');\n\n  if (gameOverText.length > 0) {\n    var gameOverTextParent = gameOverText[0].parentNode;\n    gameOverTextParent.removeChild(gameOverText[0]);\n  }\n\n  ;\n  initiateMovingTarget();\n  addEventListenerToDoc(true);\n}\n\nfunction initiateMovingTarget() {\n  var id = setInterval(movingTarget, 10);\n\n  function movingTarget() {\n    var target = document.getElementsByClassName('shooting-target');\n    target[0].setAttribute(\"style\", \"top:0px;left:\".concat(shootingTargetObj.left, \"px\"));\n\n    if (shootingTargetObj.left >= window.innerWidth - 120 || shootingTargetObj.left <= 0) {\n      shootingTargetObj.direction = shootingTargetObj.direction * -1;\n    }\n\n    shootingTargetObj.left = shootingTargetObj.left + shootingTargetObj.direction;\n  }\n}\n\nfunction addEventListenerToDoc(val) {\n  if (val) {\n    arrowObj.canShoot = true;\n    setTimeout(function () {\n      ['click', 'keypress'].forEach(function (evt) {\n        return document.body.addEventListener(evt, moveArrow);\n      });\n    }, 10);\n  } else {\n    ['click', 'keypress'].forEach(function (evt) {\n      return document.body.removeEventListener(evt, moveArrow);\n    });\n  }\n}\n\nfunction moveArrow(e) {\n  var arrowDOM = document.getElementsByClassName('arrow');\n  console.log(arrowDOM);\n  console.log(e);\n  if (!arrowObj.canShoot) return null;\n\n  if (e.type === \"click\" || e.charCode === 32 || e.charCode === 102) {\n    var movingArrowFn = function movingArrowFn() {\n      if (_arrowDOM[0].offsetParent.offsetTop + arrowObj.top == 55) {\n        clearInterval(id);\n        console.log(_arrowDOM);\n\n        if (window.innerWidth / 2 - 110 < shootingTargetObj.left && shootingTargetObj.left < window.innerWidth / 2 + 10) {\n          updateData();\n        }\n      }\n\n      _arrowDOM[0].setAttribute(\"style\", \"top:\".concat(arrowObj.top, \"px;left:49px\"));\n\n      arrowObj.top = arrowObj.top - 1;\n      console.log('window.innerWidth/2-110', window.innerWidth / 2 - 110);\n      console.log('window.innerWidth/2+10', window.innerWidth / 2 + 10);\n      console.log('shootingTargetObj.left', shootingTargetObj.left);\n    };\n\n    var id = setInterval(movingArrowFn, 4);\n\n    var _arrowDOM = document.getElementsByClassName('arrow');\n\n    arrowObj.canShoot = false;\n    console.log(\"dupa\");\n  } else {\n    console.log(\"prawdziwa dupa\");\n    return null;\n  }\n}\n\ndocument.body.appendChild(component());\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

})